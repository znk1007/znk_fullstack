// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: removeuser.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RemoveUserRequest struct {
	Accounts     []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	AdminAccount string   `protobuf:"bytes,2,opt,name=adminAccount,proto3" json:"adminAccount,omitempty"`
	AdminUserId  string   `protobuf:"bytes,3,opt,name=adminUserId,proto3" json:"adminUserId,omitempty"`
	Device       string   `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`
}

func (m *RemoveUserRequest) Reset()         { *m = RemoveUserRequest{} }
func (m *RemoveUserRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveUserRequest) ProtoMessage()    {}
func (*RemoveUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc021d406bf29a92, []int{0}
}
func (m *RemoveUserRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveUserRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveUserRequest.Merge(m, src)
}
func (m *RemoveUserRequest) XXX_Size() int {
	return m.Size()
}
func (m *RemoveUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveUserRequest proto.InternalMessageInfo

func (m *RemoveUserRequest) GetAccounts() []string {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *RemoveUserRequest) GetAdminAccount() string {
	if m != nil {
		return m.AdminAccount
	}
	return ""
}

func (m *RemoveUserRequest) GetAdminUserId() string {
	if m != nil {
		return m.AdminUserId
	}
	return ""
}

func (m *RemoveUserRequest) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

type RemoveUserResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Status  int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *RemoveUserResponse) Reset()         { *m = RemoveUserResponse{} }
func (m *RemoveUserResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveUserResponse) ProtoMessage()    {}
func (*RemoveUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc021d406bf29a92, []int{1}
}
func (m *RemoveUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RemoveUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RemoveUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RemoveUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveUserResponse.Merge(m, src)
}
func (m *RemoveUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *RemoveUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveUserResponse proto.InternalMessageInfo

func (m *RemoveUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RemoveUserResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RemoveUserResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*RemoveUserRequest)(nil), "protos.removeuser.RemoveUserRequest")
	proto.RegisterType((*RemoveUserResponse)(nil), "protos.removeuser.RemoveUserResponse")
}

func init() { proto.RegisterFile("removeuser.proto", fileDescriptor_dc021d406bf29a92) }

var fileDescriptor_dc021d406bf29a92 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x31, 0x4e, 0xc3, 0x40,
	0x10, 0x45, 0xbd, 0x24, 0x31, 0x64, 0xa0, 0x20, 0x53, 0xa0, 0x55, 0x8a, 0x95, 0x65, 0x81, 0x94,
	0xca, 0x05, 0x9c, 0x00, 0x3a, 0xda, 0x95, 0xd2, 0xa4, 0x33, 0xf6, 0x08, 0xa5, 0xb0, 0x37, 0x78,
	0xd6, 0xb9, 0x05, 0x12, 0xc7, 0xa2, 0x4c, 0x49, 0x89, 0xec, 0x8b, 0xa0, 0xcc, 0x06, 0x12, 0x94,
	0x22, 0xd5, 0xf8, 0xcd, 0x7c, 0xff, 0xfd, 0xfa, 0x70, 0xdd, 0x50, 0xe5, 0xd6, 0xd4, 0x32, 0x35,
	0xd9, 0xaa, 0x71, 0xde, 0xe1, 0x44, 0x06, 0x67, 0xfb, 0x43, 0xfa, 0xae, 0x60, 0x62, 0x05, 0xe7,
	0x4c, 0x8d, 0xa5, 0xb7, 0x96, 0xd8, 0xe3, 0x14, 0x2e, 0xf2, 0xa2, 0x70, 0x6d, 0xed, 0x59, 0xab,
	0x64, 0x30, 0x1b, 0xdb, 0x3f, 0xc6, 0x14, 0xae, 0xf2, 0xb2, 0x5a, 0xd6, 0x8f, 0x61, 0xa1, 0xcf,
	0x12, 0x35, 0x1b, 0xdb, 0x7f, 0x3b, 0x4c, 0xe0, 0x52, 0x78, 0xeb, 0xf9, 0x5c, 0xea, 0x81, 0x48,
	0x0e, 0x57, 0x78, 0x03, 0x71, 0x49, 0xeb, 0x65, 0x41, 0x7a, 0x28, 0xc7, 0x1d, 0xa5, 0x0b, 0xc0,
	0xc3, 0x38, 0xbc, 0x72, 0x35, 0x13, 0x6a, 0x38, 0xaf, 0x88, 0x39, 0x7f, 0x25, 0xad, 0x44, 0xfe,
	0x8b, 0x88, 0x30, 0x2c, 0x5c, 0x49, 0x92, 0x62, 0x64, 0xe5, 0x7b, 0xeb, 0xcd, 0x3e, 0xf7, 0x2d,
	0xcb, 0xc3, 0x23, 0xbb, 0xa3, 0xfb, 0x02, 0x60, 0xef, 0x8d, 0x73, 0x88, 0x43, 0x0f, 0x78, 0x9b,
	0x1d, 0xf5, 0x92, 0x1d, 0x75, 0x32, 0xbd, 0x3b, 0xa1, 0x0a, 0x51, 0x9f, 0x92, 0xcf, 0xce, 0xa8,
	0x4d, 0x67, 0xd4, 0x77, 0x67, 0xd4, 0x47, 0x6f, 0xa2, 0x4d, 0x6f, 0xa2, 0xaf, 0xde, 0x44, 0x8b,
	0x38, 0xfc, 0xff, 0x12, 0xe6, 0xc3, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x5f, 0x5b, 0xb6,
	0xa0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RemoveUserClient is the client API for RemoveUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoveUserClient interface {
	Remove(ctx context.Context, in *RemoveUserRequest, opts ...grpc.CallOption) (*RemoveUserResponse, error)
}

type removeUserClient struct {
	cc *grpc.ClientConn
}

func NewRemoveUserClient(cc *grpc.ClientConn) RemoveUserClient {
	return &removeUserClient{cc}
}

func (c *removeUserClient) Remove(ctx context.Context, in *RemoveUserRequest, opts ...grpc.CallOption) (*RemoveUserResponse, error) {
	out := new(RemoveUserResponse)
	err := c.cc.Invoke(ctx, "/protos.removeuser.RemoveUser/remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoveUserServer is the server API for RemoveUser service.
type RemoveUserServer interface {
	Remove(context.Context, *RemoveUserRequest) (*RemoveUserResponse, error)
}

// UnimplementedRemoveUserServer can be embedded to have forward compatible implementations.
type UnimplementedRemoveUserServer struct {
}

func (*UnimplementedRemoveUserServer) Remove(ctx context.Context, req *RemoveUserRequest) (*RemoveUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}

func RegisterRemoveUserServer(s *grpc.Server, srv RemoveUserServer) {
	s.RegisterService(&_RemoveUser_serviceDesc, srv)
}

func _RemoveUser_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoveUserServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.removeuser.RemoveUser/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoveUserServer).Remove(ctx, req.(*RemoveUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoveUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.removeuser.RemoveUser",
	HandlerType: (*RemoveUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "remove",
			Handler:    _RemoveUser_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "removeuser.proto",
}

func (m *RemoveUserRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveUserRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Accounts) > 0 {
		for _, s := range m.Accounts {
			dAtA[i] = 0xa
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	if len(m.AdminAccount) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintRemoveuser(dAtA, i, uint64(len(m.AdminAccount)))
		i += copy(dAtA[i:], m.AdminAccount)
	}
	if len(m.AdminUserId) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintRemoveuser(dAtA, i, uint64(len(m.AdminUserId)))
		i += copy(dAtA[i:], m.AdminUserId)
	}
	if len(m.Device) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintRemoveuser(dAtA, i, uint64(len(m.Device)))
		i += copy(dAtA[i:], m.Device)
	}
	return i, nil
}

func (m *RemoveUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RemoveUserResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintRemoveuser(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.Code != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintRemoveuser(dAtA, i, uint64(m.Code))
	}
	if m.Status != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintRemoveuser(dAtA, i, uint64(m.Status))
	}
	return i, nil
}

func encodeVarintRemoveuser(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *RemoveUserRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Accounts) > 0 {
		for _, s := range m.Accounts {
			l = len(s)
			n += 1 + l + sovRemoveuser(uint64(l))
		}
	}
	l = len(m.AdminAccount)
	if l > 0 {
		n += 1 + l + sovRemoveuser(uint64(l))
	}
	l = len(m.AdminUserId)
	if l > 0 {
		n += 1 + l + sovRemoveuser(uint64(l))
	}
	l = len(m.Device)
	if l > 0 {
		n += 1 + l + sovRemoveuser(uint64(l))
	}
	return n
}

func (m *RemoveUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovRemoveuser(uint64(l))
	}
	if m.Code != 0 {
		n += 1 + sovRemoveuser(uint64(m.Code))
	}
	if m.Status != 0 {
		n += 1 + sovRemoveuser(uint64(m.Status))
	}
	return n
}

func sovRemoveuser(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRemoveuser(x uint64) (n int) {
	return sovRemoveuser(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RemoveUserRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRemoveuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveUserRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveUserRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Accounts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoveuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Accounts = append(m.Accounts, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminAccount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoveuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminAccount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdminUserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoveuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdminUserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Device", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoveuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Device = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRemoveuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RemoveUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRemoveuser
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RemoveUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RemoveUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRemoveuser
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRemoveuser(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRemoveuser
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRemoveuser(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRemoveuser
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRemoveuser
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRemoveuser
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthRemoveuser
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowRemoveuser
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipRemoveuser(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthRemoveuser
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthRemoveuser = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRemoveuser   = fmt.Errorf("proto: integer overflow")
)
