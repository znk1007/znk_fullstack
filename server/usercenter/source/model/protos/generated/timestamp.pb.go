// Code generated by protoc-gen-go. DO NOT EDIT.
// source: timestamp.proto

package userproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TSReq struct {
	//平台类型
	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	//设备ID
	DeviceID string `protobuf:"bytes,2,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	// 设备名称
	DeviceName           string   `protobuf:"bytes,3,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TSReq) Reset()         { *m = TSReq{} }
func (m *TSReq) String() string { return proto.CompactTextString(m) }
func (*TSReq) ProtoMessage()    {}
func (*TSReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_edac929d8ae1e24f, []int{0}
}

func (m *TSReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TSReq.Unmarshal(m, b)
}
func (m *TSReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TSReq.Marshal(b, m, deterministic)
}
func (m *TSReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TSReq.Merge(m, src)
}
func (m *TSReq) XXX_Size() int {
	return xxx_messageInfo_TSReq.Size(m)
}
func (m *TSReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TSReq.DiscardUnknown(m)
}

var xxx_messageInfo_TSReq proto.InternalMessageInfo

func (m *TSReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *TSReq) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *TSReq) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

type TSRes struct {
	//状态码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	//反馈消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	//时间戳
	Timestamp            string   `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TSRes) Reset()         { *m = TSRes{} }
func (m *TSRes) String() string { return proto.CompactTextString(m) }
func (*TSRes) ProtoMessage()    {}
func (*TSRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_edac929d8ae1e24f, []int{1}
}

func (m *TSRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TSRes.Unmarshal(m, b)
}
func (m *TSRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TSRes.Marshal(b, m, deterministic)
}
func (m *TSRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TSRes.Merge(m, src)
}
func (m *TSRes) XXX_Size() int {
	return xxx_messageInfo_TSRes.Size(m)
}
func (m *TSRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TSRes.DiscardUnknown(m)
}

var xxx_messageInfo_TSRes proto.InternalMessageInfo

func (m *TSRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TSRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TSRes) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func init() {
	proto.RegisterType((*TSReq)(nil), "timestamp.TSReq")
	proto.RegisterType((*TSRes)(nil), "timestamp.TSRes")
}

func init() {
	proto.RegisterFile("timestamp.proto", fileDescriptor_edac929d8ae1e24f)
}

var fileDescriptor_edac929d8ae1e24f = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xc9, 0xcc, 0x4d,
	0x2d, 0x2e, 0x49, 0xcc, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xc5, 0x73, 0xb1, 0x86, 0x04, 0x07, 0xa5, 0x16, 0x0a, 0x49, 0x71, 0x71, 0x14, 0xe4, 0x24, 0x96,
	0xa4, 0xe5, 0x17, 0xe5, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x20, 0xb9, 0x94,
	0xd4, 0xb2, 0xcc, 0xe4, 0x54, 0x4f, 0x17, 0x09, 0x26, 0x88, 0x1c, 0x8c, 0x2f, 0x24, 0xc7, 0xc5,
	0x05, 0x61, 0xfb, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x83, 0x65, 0x91, 0x44, 0x94, 0x82, 0x21, 0x16,
	0x14, 0x0b, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x82, 0x0d, 0x67, 0x0d, 0x02, 0xb3, 0x85,
	0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0xa1, 0xe6, 0xc2, 0xb8, 0x42, 0x32,
	0x5c, 0x08, 0x47, 0x42, 0x4d, 0x45, 0x08, 0x18, 0xb9, 0x72, 0xf1, 0x84, 0xc0, 0x38, 0xc1, 0x45,
	0x65, 0x42, 0xa6, 0x5c, 0xbc, 0xa5, 0xc5, 0xa9, 0x45, 0x70, 0x31, 0x21, 0x01, 0x3d, 0x84, 0x9f,
	0xc1, 0xfe, 0x93, 0xc2, 0x10, 0x51, 0x62, 0x70, 0xe2, 0x8e, 0xe2, 0x04, 0x69, 0x03, 0x07, 0x4a,
	0x12, 0x1b, 0x98, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcc, 0x20, 0x82, 0x04, 0x2e, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TimestampSrvClient is the client API for TimestampSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TimestampSrvClient interface {
	UserTimestamp(ctx context.Context, in *TSReq, opts ...grpc.CallOption) (*TSReq, error)
}

type timestampSrvClient struct {
	cc grpc.ClientConnInterface
}

func NewTimestampSrvClient(cc grpc.ClientConnInterface) TimestampSrvClient {
	return &timestampSrvClient{cc}
}

func (c *timestampSrvClient) UserTimestamp(ctx context.Context, in *TSReq, opts ...grpc.CallOption) (*TSReq, error) {
	out := new(TSReq)
	err := c.cc.Invoke(ctx, "/timestamp.TimestampSrv/userTimestamp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TimestampSrvServer is the server API for TimestampSrv service.
type TimestampSrvServer interface {
	UserTimestamp(context.Context, *TSReq) (*TSReq, error)
}

// UnimplementedTimestampSrvServer can be embedded to have forward compatible implementations.
type UnimplementedTimestampSrvServer struct {
}

func (*UnimplementedTimestampSrvServer) UserTimestamp(ctx context.Context, req *TSReq) (*TSReq, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserTimestamp not implemented")
}

func RegisterTimestampSrvServer(s *grpc.Server, srv TimestampSrvServer) {
	s.RegisterService(&_TimestampSrv_serviceDesc, srv)
}

func _TimestampSrv_UserTimestamp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TSReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimestampSrvServer).UserTimestamp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/timestamp.TimestampSrv/UserTimestamp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimestampSrvServer).UserTimestamp(ctx, req.(*TSReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimestampSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "timestamp.TimestampSrv",
	HandlerType: (*TimestampSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "userTimestamp",
			Handler:    _TimestampSrv_UserTimestamp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "timestamp.proto",
}
